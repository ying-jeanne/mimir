name: Lint and Update renovate PR

# configure trigger by pull request
on:
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs: 
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Get build image from Makefile
        id: build_image_step
        run: echo "build_image=$(make print-build-image)" >> "$GITHUB_OUTPUT"
    outputs:
      build_image: ${{ steps.build_image_step.outputs.build_image }}

  lint_and_update:
    if: github.event.pull_request.user.login == 'renovate[bot]'
    runs-on: ubuntu-latest
    needs:
      - prepare
    container:
      image: ${{ needs.prepare.outputs.build_image }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Run Git Config
        run: git config --global --add safe.directory '*'

        # Commands in the Makefile are hardcoded with an assumed file structure of the CI container
        # Symlink ensures paths specified in previous commands donâ€™t break
      - name: Symlink Expected Path to Workspace
        run: |
          mkdir -p /go/src/github.com/grafana/mimir
          ln -s $GITHUB_WORKSPACE/* /go/src/github.com/grafana/mimir
  
      - name: Update Helm Test
        id: update
        run: |
          make BUILD_IN_CONTAINER=false build-helm-tests
      
      - name: Check Updates
        id: check_updates
        run: |
          ls -la
          if ./tools/find-diff-or-untracked.sh .; then
            echo "diff=0" >> "$GITHUB_OUTPUT" # Script success, no change
          else
            echo "diff=1" >> "$GITHUB_OUTPUT" # Script failed, changes exist
          fi
          

      - name: Update PR
        id: update_pr
        if: steps.check_updates.outputs.diff != '0'
        run: |
            echo "Add commit to fix linting errors"
            git config --global user.email "${{ github.event.pull_request.user.login }}@users.noreply.github.com"
            git config --global user.name "${{ github.event.pull_request.user.login }}"
            git add .
            git commit -m "Update build with linting fixes"
            git push
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
